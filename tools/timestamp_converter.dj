{tool="true"}
# Timestamp converter

``` =html
<form action="javascript:parse(true)">
    <input type="number" id="parse"/>
    <button onclick="parse(true)">parse</button>
</form>
```

`<span id="parsed"/>`{=html}

``` =html
<script>
var timestamp = Date.now()
var searchParams = new URLSearchParams(window.location.search);
if (searchParams.get("q") != null) {
    document.getElementById("parse").value = searchParams.get("q");
} else {
    document.getElementById("parse").value = Date.now();
}
parse(false);

function parse(updateUrl) {
    var parsed = document.getElementById("parsed");
    var text = document.getElementById("parse").value;
    var timestamp = parseInt(text);
    var date = null, unit = null;
    if (!isNaN(timestamp) && timestamp >= 0) {
        if (timestamp < 31_536_000_000) { // we have seconds here (31536000000 ~ 1000 years since 1970)
            date = new Date(timestamp * 1000);
            unit = "seconds";
        } else if (timestamp < 31_536_000_000_000) { // we have milliseconds here
            date = new Date(timestamp);
            unit = "milliseconds";
        } else if (timestamp < 31_536_000_000_000_000) { // we have nanoseconds here
            date = new Date(timestamp / 1000);
            unit = "nanoseconds";
        }
    }
    if (date == null) {
        parsed.innerText = "invalid timestamp '" + text + "'";
    } else {
        parsed.innerText = date.toUTCString() + " (units: " + unit + ")";
        if (updateUrl) {
            var searchParams = new URLSearchParams(window.location.search);
            searchParams.set("q", timestamp);
            var newRelativePathQuery = window.location.pathname + '?' + searchParams.toString();
            history.replaceState(null, '', newRelativePathQuery);
        }
    }
}
</script>
```